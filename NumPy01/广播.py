"""
数组和标量，或者不同形状的数组进行运算时就会触发广播。

广播规则：
    广播的第一条规则是，如果所有输入数组的维数不同，则将在较小数组的形状前面
    重复添加1，直到所有数组具有相同的维数
    广播的第二条规则是，如果两个数组维度相同时，要么对应轴的长度相同，要
    么对应其中一个长度1，则是兼容数组可以广播。长度为1的轴会被扩展。

应用广播规则后，所有数组大小必须匹配。
"""

import numpy as np

a = np.array([1, 2, 3, 4])
"""
数组和标量发生运算时
    1.标量升维到对应数组的维度
        a.shape (4, )
    2.维度相同了，此时看对应轴的维度
        [3, 3, 3, 3]
"""
b = a + 3
print(b) # [4 5 6 7]

"""
- a 和 c 维度相同，满足广播条件一
- 维度相同，就看对应轴长度
    a (4, )
    c (3, )
    对应轴长度不相同，广播失败
"""
# c = np.array([1, 2, 3])
# d = a + c
# print(d)

"""
- x 和 y 维度不同，y 升维
    (2, ) -> (1, 2)
    [1, 2] -> [[1, 2]]
    维度相同，就看对应轴的长度
    (2, 2)
    (1, 2) -> (2, 2) 
    [[1 2] [1 2]]
实际变成 [[1 2] [3 4]] + [[1 2] [1 2]]
"""
x = np.array([[1, 2], [3, 4]])
y = np.array([1, 2])
print(x + y) # [[2 4] [4 6]]

j = np.arange(1, 25).reshape(3, 2, 4)
"""
[[[ 1  2  3  4]
  [ 5  6  7  8]]

 [[ 9 10 11 12]
  [13 14 15 16]]

 [[17 18 19 20]
  [21 22 23 24]]]
"""
print(j)
"""
广播分析：
    j[0]
        [[1 2 3 4]
         [5 6 7 8]]
    形状：(2, 4)
    255 标量
    升维 [[255] 形状：(1, 1)
    (2, 4) (1, 1)
    维度相同，对应轴有1能发生广播 (1, 1) -> (2, 4)
    (2, 4) (2, 4)
    [[255 255 255 255]
     [255 255 255 255]]
"""
j[0] = 255
"""
[[[255 255 255 255]
  [255 255 255 255]]

 [[9 10 11 12]
  [13 14 15 16]]

 [[17 18 19 20]
  [21 22 23 24]]]
"""
print(j)

# j[0] = [255, 255, 255, 255]

"""
广播分析：
    [255, 255, 255, 255]
    维度不同升维
    [[255, 255, 255, 255]]
    形状：(1, 4)
    (2, 4) (1, 4)
    有1扩展 -> 2
    (2, 4) (2, 4)
    广播成功
"""